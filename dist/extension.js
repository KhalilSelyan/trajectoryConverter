(()=>{"use strict";var __webpack_modules__={465:(__unused_webpack_module,exports,__webpack_require__)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.activate = void 0;\nconst utils_1 = __webpack_require__(679);\nfunction quadraticBezier(p0, p1, p2, t) {\n    const x = (1 - t) * (1 - t) * p0.x + 2 * (1 - t) * t * p1.x + t * t * p2.x;\n    const y = (1 - t) * (1 - t) * p0.y + 2 * (1 - t) * t * p1.y + t * t * p2.y;\n    return { x, y };\n}\nfunction activate(extensionContext) {\n    extensionContext.registerMessageConverter({\n        fromSchemaName: "autoware_auto_planning_msgs/msg/Trajectory",\n        toSchemaName: "foxglove.SceneUpdate",\n        converter: (msg) => {\n            const { points } = msg;\n            const colors = [];\n            const triangleList = {\n                pose: {\n                    position: { x: 0, y: 0, z: 0 },\n                    orientation: { x: 0, y: 0, z: 0, w: 1 },\n                },\n                points: [],\n                color: { r: 1, g: 0, b: 1, a: 1 },\n                colors,\n                indices: [],\n            };\n            const width = 2; // Rectangle\'s half-width\n            for (let i = 0; i < points.length - 2; i += 1) {\n                const p0 = points[i].pose.position; // Start point\n                const p1 = points[i + 1]?.pose.position ?? p0; // Control point\n                const p2 = points[i + 2]?.pose.position ?? p1; // End point\n                for (let t = 0; t < 1; t += 0.1) {\n                    const t1 = t;\n                    const t2 = t + 0.1;\n                    const point1 = quadraticBezier(p0, p1, p2, t1);\n                    const point2 = quadraticBezier(p0, p1, p2, t2);\n                    // Calculate the direction of the curve\n                    const dx = point2.x - point1.x;\n                    const dy = point2.y - point1.y;\n                    const len = Math.sqrt(dx * dx + dy * dy);\n                    const nx = (dy / len) * width;\n                    const ny = (-dx / len) * width;\n                    triangleList.points.push({ x: point1.x + nx, y: point1.y + ny, z: p0.z + 0.15 }, { x: point1.x - nx, y: point1.y - ny, z: p0.z + 0.15 }, { x: point2.x + nx, y: point2.y + ny, z: p0.z + 0.15 }, { x: point2.x - nx, y: point2.y - ny, z: p0.z + 0.15 });\n                    colors.push((0, utils_1.setColorDependsOnVelocity)(3, points[i].longitudinal_velocity_mps));\n                    colors.push((0, utils_1.setColorDependsOnVelocity)(3, (points[i + 1] ?? points[i]).longitudinal_velocity_mps));\n                    const idx = triangleList.points.length - 4;\n                    triangleList.indices.push(idx, idx + 1, idx + 2, idx + 1, idx + 2, idx + 3);\n                }\n            }\n            const sceneUpdate = {\n                deletions: [],\n                entities: [\n                    {\n                        id: "path",\n                        arrows: [],\n                        lines: [],\n                        cubes: [],\n                        spheres: [],\n                        cylinders: [],\n                        models: [],\n                        texts: [],\n                        triangles: [triangleList],\n                        timestamp: msg.header.stamp,\n                        frame_id: msg.header.frame_id,\n                        frame_locked: false,\n                        lifetime: {\n                            sec: 1,\n                            nsec: 0,\n                        },\n                        metadata: [],\n                    },\n                ],\n            };\n            return sceneUpdate;\n        },\n    });\n}\nexports.activate = activate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDY1LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixnQkFBZ0IsbUJBQU8sQ0FBQyxHQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsU0FBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msa0JBQWtCO0FBQ2xELG1DQUFtQyx3QkFBd0I7QUFDM0QsaUJBQWlCO0FBQ2pCO0FBQ0EseUJBQXlCLHdCQUF3QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IsNEJBQTRCLHVCQUF1QjtBQUNuRCxvREFBb0Q7QUFDcEQsK0RBQStEO0FBQy9ELCtEQUErRDtBQUMvRCxnQ0FBZ0MsT0FBTztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxvREFBb0QsSUFBSSxvREFBb0QsSUFBSSxvREFBb0QsSUFBSSxvREFBb0Q7QUFDM1E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWplY3RvcnlDb252ZXJ0ZXIvLi9zcmMvaW5kZXgudHM/MzNiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYWN0aXZhdGUgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5mdW5jdGlvbiBxdWFkcmF0aWNCZXppZXIocDAsIHAxLCBwMiwgdCkge1xuICAgIGNvbnN0IHggPSAoMSAtIHQpICogKDEgLSB0KSAqIHAwLnggKyAyICogKDEgLSB0KSAqIHQgKiBwMS54ICsgdCAqIHQgKiBwMi54O1xuICAgIGNvbnN0IHkgPSAoMSAtIHQpICogKDEgLSB0KSAqIHAwLnkgKyAyICogKDEgLSB0KSAqIHQgKiBwMS55ICsgdCAqIHQgKiBwMi55O1xuICAgIHJldHVybiB7IHgsIHkgfTtcbn1cbmZ1bmN0aW9uIGFjdGl2YXRlKGV4dGVuc2lvbkNvbnRleHQpIHtcbiAgICBleHRlbnNpb25Db250ZXh0LnJlZ2lzdGVyTWVzc2FnZUNvbnZlcnRlcih7XG4gICAgICAgIGZyb21TY2hlbWFOYW1lOiBcImF1dG93YXJlX2F1dG9fcGxhbm5pbmdfbXNncy9tc2cvVHJhamVjdG9yeVwiLFxuICAgICAgICB0b1NjaGVtYU5hbWU6IFwiZm94Z2xvdmUuU2NlbmVVcGRhdGVcIixcbiAgICAgICAgY29udmVydGVyOiAobXNnKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IHBvaW50cyB9ID0gbXNnO1xuICAgICAgICAgICAgY29uc3QgY29sb3JzID0gW107XG4gICAgICAgICAgICBjb25zdCB0cmlhbmdsZUxpc3QgPSB7XG4gICAgICAgICAgICAgICAgcG9zZToge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogeyB4OiAwLCB5OiAwLCB6OiAwIH0sXG4gICAgICAgICAgICAgICAgICAgIG9yaWVudGF0aW9uOiB7IHg6IDAsIHk6IDAsIHo6IDAsIHc6IDEgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHBvaW50czogW10sXG4gICAgICAgICAgICAgICAgY29sb3I6IHsgcjogMSwgZzogMCwgYjogMSwgYTogMSB9LFxuICAgICAgICAgICAgICAgIGNvbG9ycyxcbiAgICAgICAgICAgICAgICBpbmRpY2VzOiBbXSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCB3aWR0aCA9IDI7IC8vIFJlY3RhbmdsZSdzIGhhbGYtd2lkdGhcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9pbnRzLmxlbmd0aCAtIDI7IGkgKz0gMSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHAwID0gcG9pbnRzW2ldLnBvc2UucG9zaXRpb247IC8vIFN0YXJ0IHBvaW50XG4gICAgICAgICAgICAgICAgY29uc3QgcDEgPSBwb2ludHNbaSArIDFdPy5wb3NlLnBvc2l0aW9uID8/IHAwOyAvLyBDb250cm9sIHBvaW50XG4gICAgICAgICAgICAgICAgY29uc3QgcDIgPSBwb2ludHNbaSArIDJdPy5wb3NlLnBvc2l0aW9uID8/IHAxOyAvLyBFbmQgcG9pbnRcbiAgICAgICAgICAgICAgICBmb3IgKGxldCB0ID0gMDsgdCA8IDE7IHQgKz0gMC4xKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHQxID0gdDtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdDIgPSB0ICsgMC4xO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwb2ludDEgPSBxdWFkcmF0aWNCZXppZXIocDAsIHAxLCBwMiwgdDEpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwb2ludDIgPSBxdWFkcmF0aWNCZXppZXIocDAsIHAxLCBwMiwgdDIpO1xuICAgICAgICAgICAgICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGRpcmVjdGlvbiBvZiB0aGUgY3VydmVcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZHggPSBwb2ludDIueCAtIHBvaW50MS54O1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBkeSA9IHBvaW50Mi55IC0gcG9pbnQxLnk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGxlbiA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG54ID0gKGR5IC8gbGVuKSAqIHdpZHRoO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBueSA9ICgtZHggLyBsZW4pICogd2lkdGg7XG4gICAgICAgICAgICAgICAgICAgIHRyaWFuZ2xlTGlzdC5wb2ludHMucHVzaCh7IHg6IHBvaW50MS54ICsgbngsIHk6IHBvaW50MS55ICsgbnksIHo6IHAwLnogKyAwLjE1IH0sIHsgeDogcG9pbnQxLnggLSBueCwgeTogcG9pbnQxLnkgLSBueSwgejogcDAueiArIDAuMTUgfSwgeyB4OiBwb2ludDIueCArIG54LCB5OiBwb2ludDIueSArIG55LCB6OiBwMC56ICsgMC4xNSB9LCB7IHg6IHBvaW50Mi54IC0gbngsIHk6IHBvaW50Mi55IC0gbnksIHo6IHAwLnogKyAwLjE1IH0pO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcnMucHVzaCgoMCwgdXRpbHNfMS5zZXRDb2xvckRlcGVuZHNPblZlbG9jaXR5KSgzLCBwb2ludHNbaV0ubG9uZ2l0dWRpbmFsX3ZlbG9jaXR5X21wcykpO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcnMucHVzaCgoMCwgdXRpbHNfMS5zZXRDb2xvckRlcGVuZHNPblZlbG9jaXR5KSgzLCAocG9pbnRzW2kgKyAxXSA/PyBwb2ludHNbaV0pLmxvbmdpdHVkaW5hbF92ZWxvY2l0eV9tcHMpKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWR4ID0gdHJpYW5nbGVMaXN0LnBvaW50cy5sZW5ndGggLSA0O1xuICAgICAgICAgICAgICAgICAgICB0cmlhbmdsZUxpc3QuaW5kaWNlcy5wdXNoKGlkeCwgaWR4ICsgMSwgaWR4ICsgMiwgaWR4ICsgMSwgaWR4ICsgMiwgaWR4ICsgMyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgc2NlbmVVcGRhdGUgPSB7XG4gICAgICAgICAgICAgICAgZGVsZXRpb25zOiBbXSxcbiAgICAgICAgICAgICAgICBlbnRpdGllczogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJwYXRoXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhcnJvd3M6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGluZXM6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgY3ViZXM6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3BoZXJlczogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICBjeWxpbmRlcnM6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWxzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyaWFuZ2xlczogW3RyaWFuZ2xlTGlzdF0sXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG1zZy5oZWFkZXIuc3RhbXAsXG4gICAgICAgICAgICAgICAgICAgICAgICBmcmFtZV9pZDogbXNnLmhlYWRlci5mcmFtZV9pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZyYW1lX2xvY2tlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBsaWZldGltZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlYzogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuc2VjOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGFkYXRhOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBzY2VuZVVwZGF0ZTtcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmV4cG9ydHMuYWN0aXZhdGUgPSBhY3RpdmF0ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///465\n')},679:(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.setColorDependsOnVelocity = void 0;\nfunction setColorDependsOnVelocity(vel_max, cmd_vel) {\n    // Get absolute value of velocity\n    const cmd_vel_abs = Math.abs(cmd_vel);\n    const vel_min = 0.0;\n    // Set color pointer\n    let color = { r: 0, g: 0, b: 0, a: 1.0 };\n    // If velocity is between vel_min and vel_max/2, set color from red to yellow\n    if (vel_min < cmd_vel_abs && cmd_vel_abs <= vel_max / 2.0) {\n        // Get ratio of velocity\n        const ratio = (cmd_vel_abs - vel_min) / (vel_max / 2.0 - vel_min);\n        // Set color\n        color = gradation({ r: 1.0, g: 0, b: 0, a: 1.0 }, { r: 1.0, g: 1.0, b: 0, a: 1.0 }, ratio);\n        // If velocity is between vel_max/2 and vel_max, set color from yellow to green\n    }\n    else if (vel_max / 2.0 < cmd_vel_abs && cmd_vel_abs <= vel_max) {\n        // Get ratio of velocity\n        const ratio = (cmd_vel_abs - vel_max / 2.0) / (vel_max - vel_max / 2.0);\n        // Set color\n        color = gradation({ r: 1.0, g: 1.0, b: 0, a: 1.0 }, { r: 0, g: 1.0, b: 0, a: 1.0 }, ratio);\n        // If velocity is greater than vel_max, set color to green\n    }\n    else if (vel_max < cmd_vel_abs) {\n        color = { r: 0, g: 1.0, b: 0, a: 1.0 };\n        // If velocity is less than vel_min, set color to red\n    }\n    else {\n        color = { r: 1.0, g: 0, b: 0, a: 1.0 };\n    }\n    return color;\n}\nexports.setColorDependsOnVelocity = setColorDependsOnVelocity;\nfunction gradation(color_min, color_max, ratio) {\n    const color = { r: 0, g: 0, b: 0, a: 1.0 };\n    color.r = color_max.r * ratio + color_min.r * (1.0 - ratio);\n    color.g = color_max.g * ratio + color_min.g * (1.0 - ratio);\n    color.b = color_max.b * ratio + color_min.b * (1.0 - ratio);\n    color.a = 1.0; // Assuming full opacity. Adjust as needed.\n    return color;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjc5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsNEJBQTRCLElBQUksOEJBQThCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qiw4QkFBOEIsSUFBSSw0QkFBNEI7QUFDMUY7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFqZWN0b3J5Q29udmVydGVyLy4vc3JjL3V0aWxzLnRzP2FlY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNldENvbG9yRGVwZW5kc09uVmVsb2NpdHkgPSB2b2lkIDA7XG5mdW5jdGlvbiBzZXRDb2xvckRlcGVuZHNPblZlbG9jaXR5KHZlbF9tYXgsIGNtZF92ZWwpIHtcbiAgICAvLyBHZXQgYWJzb2x1dGUgdmFsdWUgb2YgdmVsb2NpdHlcbiAgICBjb25zdCBjbWRfdmVsX2FicyA9IE1hdGguYWJzKGNtZF92ZWwpO1xuICAgIGNvbnN0IHZlbF9taW4gPSAwLjA7XG4gICAgLy8gU2V0IGNvbG9yIHBvaW50ZXJcbiAgICBsZXQgY29sb3IgPSB7IHI6IDAsIGc6IDAsIGI6IDAsIGE6IDEuMCB9O1xuICAgIC8vIElmIHZlbG9jaXR5IGlzIGJldHdlZW4gdmVsX21pbiBhbmQgdmVsX21heC8yLCBzZXQgY29sb3IgZnJvbSByZWQgdG8geWVsbG93XG4gICAgaWYgKHZlbF9taW4gPCBjbWRfdmVsX2FicyAmJiBjbWRfdmVsX2FicyA8PSB2ZWxfbWF4IC8gMi4wKSB7XG4gICAgICAgIC8vIEdldCByYXRpbyBvZiB2ZWxvY2l0eVxuICAgICAgICBjb25zdCByYXRpbyA9IChjbWRfdmVsX2FicyAtIHZlbF9taW4pIC8gKHZlbF9tYXggLyAyLjAgLSB2ZWxfbWluKTtcbiAgICAgICAgLy8gU2V0IGNvbG9yXG4gICAgICAgIGNvbG9yID0gZ3JhZGF0aW9uKHsgcjogMS4wLCBnOiAwLCBiOiAwLCBhOiAxLjAgfSwgeyByOiAxLjAsIGc6IDEuMCwgYjogMCwgYTogMS4wIH0sIHJhdGlvKTtcbiAgICAgICAgLy8gSWYgdmVsb2NpdHkgaXMgYmV0d2VlbiB2ZWxfbWF4LzIgYW5kIHZlbF9tYXgsIHNldCBjb2xvciBmcm9tIHllbGxvdyB0byBncmVlblxuICAgIH1cbiAgICBlbHNlIGlmICh2ZWxfbWF4IC8gMi4wIDwgY21kX3ZlbF9hYnMgJiYgY21kX3ZlbF9hYnMgPD0gdmVsX21heCkge1xuICAgICAgICAvLyBHZXQgcmF0aW8gb2YgdmVsb2NpdHlcbiAgICAgICAgY29uc3QgcmF0aW8gPSAoY21kX3ZlbF9hYnMgLSB2ZWxfbWF4IC8gMi4wKSAvICh2ZWxfbWF4IC0gdmVsX21heCAvIDIuMCk7XG4gICAgICAgIC8vIFNldCBjb2xvclxuICAgICAgICBjb2xvciA9IGdyYWRhdGlvbih7IHI6IDEuMCwgZzogMS4wLCBiOiAwLCBhOiAxLjAgfSwgeyByOiAwLCBnOiAxLjAsIGI6IDAsIGE6IDEuMCB9LCByYXRpbyk7XG4gICAgICAgIC8vIElmIHZlbG9jaXR5IGlzIGdyZWF0ZXIgdGhhbiB2ZWxfbWF4LCBzZXQgY29sb3IgdG8gZ3JlZW5cbiAgICB9XG4gICAgZWxzZSBpZiAodmVsX21heCA8IGNtZF92ZWxfYWJzKSB7XG4gICAgICAgIGNvbG9yID0geyByOiAwLCBnOiAxLjAsIGI6IDAsIGE6IDEuMCB9O1xuICAgICAgICAvLyBJZiB2ZWxvY2l0eSBpcyBsZXNzIHRoYW4gdmVsX21pbiwgc2V0IGNvbG9yIHRvIHJlZFxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29sb3IgPSB7IHI6IDEuMCwgZzogMCwgYjogMCwgYTogMS4wIH07XG4gICAgfVxuICAgIHJldHVybiBjb2xvcjtcbn1cbmV4cG9ydHMuc2V0Q29sb3JEZXBlbmRzT25WZWxvY2l0eSA9IHNldENvbG9yRGVwZW5kc09uVmVsb2NpdHk7XG5mdW5jdGlvbiBncmFkYXRpb24oY29sb3JfbWluLCBjb2xvcl9tYXgsIHJhdGlvKSB7XG4gICAgY29uc3QgY29sb3IgPSB7IHI6IDAsIGc6IDAsIGI6IDAsIGE6IDEuMCB9O1xuICAgIGNvbG9yLnIgPSBjb2xvcl9tYXguciAqIHJhdGlvICsgY29sb3JfbWluLnIgKiAoMS4wIC0gcmF0aW8pO1xuICAgIGNvbG9yLmcgPSBjb2xvcl9tYXguZyAqIHJhdGlvICsgY29sb3JfbWluLmcgKiAoMS4wIC0gcmF0aW8pO1xuICAgIGNvbG9yLmIgPSBjb2xvcl9tYXguYiAqIHJhdGlvICsgY29sb3JfbWluLmIgKiAoMS4wIC0gcmF0aW8pO1xuICAgIGNvbG9yLmEgPSAxLjA7IC8vIEFzc3VtaW5nIGZ1bGwgb3BhY2l0eS4gQWRqdXN0IGFzIG5lZWRlZC5cbiAgICByZXR1cm4gY29sb3I7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///679\n')}},__webpack_module_cache__={};function __webpack_require__(I){var g=__webpack_module_cache__[I];if(void 0!==g)return g.exports;var C=__webpack_module_cache__[I]={exports:{}};return __webpack_modules__[I](C,C.exports,__webpack_require__),C.exports}var __webpack_exports__=__webpack_require__(465);module.exports=__webpack_exports__})();